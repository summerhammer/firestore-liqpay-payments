name: firestore-liqpay-payments
version: 0.1.2
specVersion: v1beta

displayName: LiqPay Checkout for Firestore

description: >
  Integrates LiqPay Checkout for seamless payment processing.

icon: icon.png

tags: [payments]

license: Apache-2.0

sourceUrl: https://github.com/summerhammer/firestore-liqpay-payments

author:
  authorName: Summer Hammer
  url: https://summerhammer.dev

contributors:
  - authorName: Max Rozdobudko
    url: https://github.com/rozd

billingRequired: true

externalServices:
  - name: LiqPay
    pricingUri: https://www.liqpay.ua/en/tariffs

roles:
  - role: datastore.user
    reason: >
      Enables the extension to store and update payment status in Cloud 
      Firestore.  

resources:
  - name: handleInvoicePlaced
    type: firebaseextensions.v1beta.function
    description: >
      Initiates the payment process through LiqPay Checkout.
    properties:
      location: ${LOCATION}
      runtime: nodejs18
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.create
        resource: projects/${PROJECT_ID}/databases/(default)/documents/${INVOICES_COLLECTION}/{id}

  - name: handlePaymentStatus
    type: firebaseextensions.v1beta.function
    description: >
      Handles LiqPay webhook events to keep payment statuses updated.
    properties:
      location: ${LOCATION}
      runtime: nodejs18
      httpsTrigger: {}

params:
  - param: LOCATION
    label: Cloud Functions Deployment Location
    description: >
      Where would you like to deploy the functions created for this extension? 
      Typically, choose a location close to your database. Refer to the 
      [location selection guide](https://firebase.google.com/docs/functions/locations) 
      for assistance.
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Oregon (us-west1)
        value: us-west1
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: INVOICES_COLLECTION
    label: Invoices Collection
    required: true
    description: >
      Specify the Firestore collection where the extension will store and update 
      invoices.
    default: invoices
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage:
      Collection paths must have an odd number of segments separated by slashes, such as "path/to/collection".

  - param: SESSIONS_COLLECTION
    label: Checkout Sessions Collection
    required: true
    description: >
      Specify the Firestore collection path for storing and updating Checkout 
      Sessions. This path supports token substitution from Invoice fields. 
      For example, setting this to "customers/{customerId}/sessions" will store 
      sessions under "customers/customer123/sessions/{id}" if the `Invoice` has 
      a `customerId` field with value "customer123".
    default: checkout-sessions
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage:
      Collection paths must have an odd number of segments separated by slashes, such as "path/to/collection".

  - param: LIQPAY_PUBLIC_KEY
    label: LiqPay Public Key
    required: true
    type: secret
    description: >
      Your LiqPay public key, available in your LiqPay account settings.  
      [More info](https://www.liqpay.ua/en/doc).  

  - param: LIQPAY_PRIVATE_KEY
    label: LiqPay Private Key
    required: true
    type: secret
    description: >
      Your LiqPay private key, available in your LiqPay account settings.  
      [More info](https://www.liqpay.ua/en/doc).  

  - param: LIQPAY_BASE_URL
    label: LiqPay Base URL
    description: >
      The base URL for the LiqPay API. The default is: https://www.liqpay.ua/api
    default: https://www.liqpay.ua/api

  - param: WEBHOOK_URL
    label: Webhook URL for LiqPay Payment Status Updates
    description: >
      The URL where LiqPay will send payment status updates. This URL supports 
      token substitution from the `process.env`. The default URL format is:  
      `https://{LOCATION}-{PROJECT_ID}.cloudfunctions.net/ext-{EXT_INSTANCE_ID}-handlePaymentStatus`
    default: https://{LOCATION}-{PROJECT_ID}.cloudfunctions.net/ext-{EXT_INSTANCE_ID}-handlePaymentStatus

  - param: HANDLE_INVOICE_PLACED_MIN_INSTANCES
    label: Minimum Function Instances for Checkout
    required: true
    description: >
      Set the minimum number of function instances for initiating checkout 
      sessions. Increasing the number can reduce cold starts and improve 
      responsiveness. Suggested values: 0 or 1. Note: Higher values may incur 
      additional costs. Refer to [Firebase documentation](https://firebase.google.com/docs/functions/manage-functions#reduce_the_number_of_cold_starts) 
      for more information.
    default: 0

  - param: INVOICE_TO_CHECKOUT_REQUEST_JSONATA
    label: JSONata Expression to Map Invoice to LiqPay Checkout Request
    description: |
      A [JSONata](https://jsonata.org/) expression to map an Invoice document to 
      a LiqPay API Checkout request. The result must match the LiqPay API 
      Checkout schema. The document will have Invoice data available for 
      transformation. Default expression:
      ```
      {
        "version": 3,
        "action": subscription.periodicity ? "subscribe" : "pay",
        "amount": amount,
        "currency": currency,
        "description": description,
        "order_id": invoiceId,
        "subscribe": $boolean(subscription.periodicity),
        "subscribe_date_start": subscription.start,
        "subscribe_periodicity": $lookup({"annually": "year", "monthly": "month", "weekly": "week", "daily": "day"}, subscription.periodicity)
      }
      ```
      **Note:** make sure this line has no line breaks, multiline string as the
      parameter value could cause an error.
    default: >-
      {
        "version": 3,
        "action": subscription.periodicity ? "subscribe" : "pay",
        "amount": amount,
        "currency": currency,
        "description": description,
        "order_id": invoiceId,
        "subscribe": $boolean(subscription.periodicity),
        "subscribe_date_start": subscription.start,
        "subscribe_periodicity": $lookup({"annually": "year", "monthly": "month", "weekly": "week", "daily": "day"}, subscription.periodicity)
      }

events:
  - type: dev.summerhammer.firestore-liqpay-payments.v1.checkout-session.created
    description: Triggered when a new checkout session is created.
  - type: dev.summerhammer.firestore-liqpay-payments.v1.checkout-session.updated
    description: Triggered when a checkout session is updated.
  - type: dev.summerhammer.firestore-liqpay-payments.v1.payment-status.received
    description: Triggered when a payment status is received from LiqPay.
